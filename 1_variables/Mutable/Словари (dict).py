########### üöÄ1. –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π üöÄ###########

# –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
d = {}
print(d)  # {}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
d = {'name': 'Alice', 'age': 25}
print(d)  # {'name': 'Alice', 'age': 25}

# –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ dict()
d = dict(name='Bob', age=30)
print(d)  # {'name': 'Bob', 'age': 30}

# –ò–∑ —Å–ø–∏—Å–∫–∞ –∫–æ—Ä—Ç–µ–∂–µ–π
d = dict([('a', 1), ('b', 2)])
print(d)  # {'a': 1, 'b': 2}




########### üöÄ2 –î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º üöÄ###########

d = {'name': 'Alice', 'age': 25}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É
print(d['name'])  # 'Alice'

# –ú–µ—Ç–æ–¥ get() (–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø)
print(d.get('age'))  # 25
print(d.get('address'))  # None (–Ω–µ—Ç –æ—à–∏–±–∫–∏)
print(d.get('address', 'N/A'))  # 'N/A' (–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞
print('name' in d)  # True
print('address' not in d)  # True




###########üöÄ 3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π üöÄ###########

d = {'name': 'Alice', 'age': 25}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
d['age'] = 26
d['address'] = 'New York'
print(d)  # {'name': 'Alice', 'age': 26, 'address': 'New York'}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è
d.update({'age': 27, 'city': 'Boston'})
print(d)  # {'name': 'Alice', 'age': 27, 'address': 'New York', 'city': 'Boston'}

# –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
del d['address']
print(d)  # {'name': 'Alice', 'age': 27, 'city': 'Boston'}

popped = d.pop('city')
print(popped)  # 'Boston'
print(d)  # {'name': 'Alice', 'age': 27}

# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (Python 3.7+)
last = d.popitem()
print(last)  # ('age', 27)
print(d)  # {'name': 'Alice'}

# –û—á–∏—Å—Ç–∫–∞ —Å–ª–æ–≤–∞—Ä—è
d.clear()
print(d)  # {}




########### üöÄ 4. –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ª–æ–≤–∞—Ä—é üöÄ###########

d = {'name': 'Alice', 'age': 25, 'city': 'New York'}

# –ö–ª—é—á–∏
print(d.keys())  # dict_keys(['name', 'age', 'city'])
for key in d:
    print(key)  # name age city

# –ó–Ω–∞—á–µ–Ω–∏—è
print(d.values())  # dict_values(['Alice', 25, 'New York'])
for value in d.values():
    print(value)  # Alice 25 New York

# –ü–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ
print(d.items())  # dict_items([('name', 'Alice'), ('age', 25), ('city', 'New York')])
for key, value in d.items():
    print(f"{key}: {value}")




########### üöÄ 5. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π üöÄ###########

d = {'a': 1, 'b': 2}

# –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–∞—è –∫–æ–ø–∏—è
d_copy = d.copy()
print(d_copy)  # {'a': 1, 'b': 2}

# –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è
import copy
d_deep = copy.deepcopy(d)




########### üöÄ 6. –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ª–æ–≤–∞—Ä–µ–π üöÄ ###########

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –∏–∑ —Å–ø–∏—Å–∫–∞
keys = ['a', 'b', 'c']
values = [1, 2, 3]
d = dict(zip(keys, values))
print(d)  # {'a': 1, 'b': 2, 'c': 3}

# Dictionary comprehension
d = {x: x**2 for x in range(5)}
print(d)  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}




###########7. –°–ª–∏—è–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π (Python 3.9+)###########

d1 = {'a': 1, 'b': 2}
d2 = {'b': 3, 'c': 4}

# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
merged = d1 | d2
print(merged)  # {'a': 1, 'b': 3, 'c': 4}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–µ
d1 |= d2
print(d1)  # {'a': 1, 'b': 3, 'c': 4}